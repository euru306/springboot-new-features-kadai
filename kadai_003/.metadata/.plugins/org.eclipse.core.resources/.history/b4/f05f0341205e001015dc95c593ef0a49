package com.example.samuraitravel.service;

import java.util.List;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable; // ← ★追加
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.example.samuraitravel.entity.Favorite;
import com.example.samuraitravel.entity.House;
import com.example.samuraitravel.entity.User;
import com.example.samuraitravel.repository.FavoriteRepository;

@Service
public class FavoriteService {
    private final FavoriteRepository favoriteRepository;

    public FavoriteService(FavoriteRepository favoriteRepository) {
        this.favoriteRepository = favoriteRepository;
    }

    @Transactional
    public void addFavorite(User user, House house) {
        if (!favoriteRepository.existsByUserAndHouse(user, house)) {
            Favorite favorite = new Favorite();
            favorite.setUser(user);
            favorite.setHouse(house);
            favoriteRepository.save(favorite);
        }
    }

    @Transactional
    public void removeFavorite(User user, House house) {
        favoriteRepository.deleteByUserAndHouse(user, house);
    }

    public boolean isFavorite(User user, House house) {
        return favoriteRepository.existsByUserAndHouse(user, house);
    }

    public List<Favorite> getFavoritesByUser(User user) {
        return favoriteRepository.findByUser(user);
    }

    // ✅★ここを追加：ページ付きでHouseを取得するメソッド
    public Page<House> getFavoriteHousesPageByUser(User user, Pageable pageable) {
        return favoriteRepository.findByUser(user, pageable)
                                 .map(Favorite::getHouse);
    }
}
